/* -------------------- */
/* Custom Properties    */
/* -------------------- */

:root {
    /* colors */
    --clr-dark: 230 35% 7%;
    --clr-light: 231 77% 90%;
    --clr-white: 0 0% 100%;

    /* font-sizes */
    /* use rem bc px can overwrite custom user settings that require for */
    /* usablity 400 is the 'base' size. Working from base 16. */
    /* clamp details: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/ */
    --fs-900: clamp(5rem, 8vw + 1rem, 9.375rem);
    --fs-800: 3.5rem;
    --fs-700: 1.5rem;
    --fs-600: 1rem;
    --fs-500: 1.75rem;
    --fs-400: 0.9375rem;
    --fs-300: 1rem;
    --fs-200: 0.875rem;

    /* font-families */
    --ff-serif: 'Bellefair', serif;
    --ff-sans-cond: 'Barlow Condensed', sans-serif;
    --ff-sans-normal: 'Barlow', sans-serif;
}

@media (min-width: 35em) {
    :root {
        --fs-800: 5rem;
        --fs-700: 2.5rem;
        --fs-600: 1.5rem;
        --fs-400: 1rem;
    }
}

/* use em on media queries bc Safari zoom issues */
@media (min-width: 45em) {
    :root {
        /* font-sizes */
        --fs-800: 6.25rem;
        --fs-700: 3.5rem;
        --fs-600: 2rem;
        --fs-500: 1.75rem;
        --fs-400: 1.125rem;
        --fs-300: 1rem;
        --fs-200: 0.875rem;
    }
}


/* -------------------- */
/* Reset                */
/* -------------------- */

/* https://piccalil.li/blog/a-modern-css-reset/ */

/* Box sizing */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Reset margins (collapsing margins) */
body,
h1,
h2,
h3,
h4,
h5,
p,
figure,
picture {
    margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
    font-weight: 400;
}

/* set up the body */
body {
    font-family: var(--ff-sans-normal);
    font-size: var(--fs-400);
    color: hsl(var(--clr-white));
    background-color: hsl(var(--clr-dark));
    line-height: 1.5;  /* browser default is 1.4 */
    min-height: 100vh; /* prevents strange short pages */
    
    display: grid;
    grid-template-rows: min-content 1fr;

    /*  */
    overflow-x: hidden;
}

/* make images easier to work with */
img,
picture {
    max-width: 100%;
    display: block;
}

/* make forms easier to work with.
By default, these items do not inherit font properties */
input,
button,
textarea,
select {
    font: inherit;
}

/* remove animations for people who've turned them off (when motion causes problems) */
@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

/* -------------------- */
/* Utility Classes      */
/* -------------------- */

/* gap is custom prop you can set on each flex/grid container */
.flex {
    display: flex;
    gap: var(--gap, 1rem);
}

/* https://css-tricks.com/snippets/css/complete-guide-grid/ */
.grid {
    display: grid;
    gap: var(--gap, 1rem);
}

.d-block {
    display: block;
}

/* Andy Bell created .flow */
/* Select everything that has a sibling before it and add styles. 'where' for specificity issues.
   * + * == *where(:not(:first-child))*/
/* --flow-space lets you set the margin-top differently on specific els */
.flow > *:where(:not(:first-child)) {
    margin-top: var(--flow-space, 1rem);
}

.container {
    padding: 0 2em;
    margin: 0 auto;
    max-width: 80rem;
    /* margin-inline: auto; */
    /* padding-inline: 2em (l/r not t/b) */
}

.grid-container {
    text-align: center;
    display: grid;
    place-items: center;
    padding: 0 1rem;
}

.grid-container * {
    max-width: 50ch;
}

@media (min-width: 45em) {
    .grid-container {
        text-align: left;
        column-gap: var(--container-gap, 2rem);
        /* 2rem -> as much space as you need | 0-40rem | 0-40rem | 2rem -> as much space as you need */
        grid-template-columns: minmax(2rem, 1fr) repeat(2, minmax(0, 40rem)) minmax(2rem, 1fr);
    }

    /* browser creates grid cols even though they are not currently defined */
    .grid-container > *:first-child {
        grid-column: 2;
    }

    .grid-container > *:last-child {
        grid-column: 3;
    }

    .grid-container--home {
        /* places the items on the bottom. max picks the greater of the two vals.
           After the padding-bottom is equal to one of these sizes, it stops sticking 
           the item to the bottom and allows the space to grow */
        padding-bottom: max(6rem, 20vh);
        align-items: end;
    }
}


/* screen reader only. Still in DOM, just hidden */
.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0,0,0,0);
    white-space: nowrap;
    border: 0;
}

.skip-to-content {
    /* absolute pulls it out of the flow so it doesn't interfere with other elements */
    position: absolute;
    z-index: 9999;
    background: hsl(var( --clr-white));
    color: hsl(var( --clr-dark));
    padding: .5em 1em;
    margin-inline: auto;
    /* hides this from the screen */
    transform: translateY(-100%);
}

.skip-to-content:focus {
    transform: translateY(0);
    transition: transform 250ms ease-in-out;
}

/* Colors */

.bg-dark   { background-color: hsl( var(--clr-dark) );}
.bg-accent { background-color: hsl( var(--clr-light) );}
.bg-white  { background-color: hsl( var(--clr-white) );}

.text-dark   { color: hsl( var(--clr-dark) );}
.text-accent { color: hsl( var(--clr-light) );}
.text-white  { color: hsl( var(--clr-white) );}

/* Typography */

.ff-serif { font-family: var(--ff-serif); }
.ff-sans-cond { font-family: var(--ff-sans-cond); }
.ff-sans-normal { font-family: var(--ff-sans-normal); }

/* you can use px for small and specific things every now and then */
.letter-spacing-1 { letter-spacing: 4.75px; }
.letter-spacing-2 { letter-spacing: 2.7px; }
.letter-spacing-3 { letter-spacing: 2.35px; }

.uppercase { text-transform: uppercase; }

.fs-900 { font-size: var(--fs-900); }
.fs-800 { font-size: var(--fs-800); }
.fs-700 { font-size: var(--fs-700); }
.fs-600 { font-size: var(--fs-600); }
.fs-500 { font-size: var(--fs-500); }
.fs-400 { font-size: var(--fs-400); }
.fs-300 { font-size: var(--fs-300); }
.fs-200 { font-size: var(--fs-200); }

.fs-900,
.fs-800,
.fs-700,
.fs-600 {
    line-height: 1.1;
}

.numbered-title {
    font-family: var(--ff-sans-cond);
    font-size: var(--fs-500);
    text-transform: uppercase;
    letter-spacing: 4.72px;
    color: hsl( var(--clr-white));
}

.numbered-title span {
    margin-right: .5em;
    font-weight: 700;
    color: hsl( var(--clr-white) / .25);
}


/* -------------------- */
/* Components           */
/* -------------------- */

.large-button {
    /* Don't usually set this font-size but it has to be the same
       across all devices */
    font-size: 2rem;
    /* makes this the containing block for ::after el */
    position: relative;
    z-index: 1;
    /* when you use just grid, inner display value is grid, 
       outer display value is block. block els grow to fit the 
       page.  */
    display: inline-grid;
    place-items: center;
    padding: 0 2em;
    border-radius: 50%;
    aspect-ratio: 1;
    text-decoration: none;
}

.large-button::after {
    /* pseudo-el must have content prop */
    content: '';
    position: absolute;
    z-index: -1;
    width: 100%;
    height: 100%;
    background: hsl( var(--clr-white) / .15);
    border-radius: 50%;
    opacity: 0;
    transition: opacity 500ms linear, transform 750ms ease-in-out;
}

.large-button:hover::after,
.large-button:focus::after {
    opacity: 1;
    transform: scale(1.5);
}

/* primary-header */

.logo {
    /* how far the logo is from top and bottom. clamp(min, middle, max) 
       viewport units don't zoom */
    margin: 1.5rem clamp(1.5rem, 5vw, 3.5rem);
}

.primary-header {
    justify-content: space-between;
    align-items: center;
}

.primary-navigation {
    --gap: clamp(1.5rem, 5vw, 3.5rem);
    --underline-gap: 2rem;
    list-style: none;
    padding: 0;
    margin: 0;
    background: hsl( var(--clr-dark) / .8);
}

@supports (backdrop-filter: blur(1.5rem)) {
    .primary-navigation {
        background: hsl( var(--clr-white) / .05);
        backdrop-filter: blur(1.5rem);
    }
}

.primary-navigation a {
    text-decoration: none;
}

.primary-navigation a > span {
    font-weight: 700;
    margin-right: .5em;
}

.mobile-nav-toggle {
    /* removes from the DOM */
    display: none;
}

/* Mobile navigation styles.
   Use max-width because both mobile and higher use many of the same properties
   and we don't want to overwrite them for the larger screen size. */
@media (max-width: 35em) {
    .primary-navigation {
        --underline-gap: .5rem;
        position: fixed;
        z-index: 1000;
        /* inset is shorthand for top/bottom/left/right. This is what positions 
        the nav to the right */
        inset: 0 0 0 30%;
        list-style-type: none;
        /* min chooses the smaller of the two vals */
        padding: min(20rem, 15vh) 2rem;
        margin: 0;
        flex-direction: column;
        /* this moves 100% of the element off to the side */
        transform: translateX(100%);
        transition: transform 500ms ease-in-out;
    }

    .primary-navigation[data-visible='true'] {
        transform: translateX(0);
    }

    .mobile-nav-toggle {
        /* removes from the DOM */
        display: block;
        position: absolute;
        z-index: 2000;
        right: 1rem;
        top: 2rem;
        background: transparent;
        border: 0;
        background-image: url(./assets/shared/icon-hamburger.svg);
        background-repeat: no-repeat;
        background-position: center;
        width: 1.5rem;
        aspect-ratio: 1;        
    }

    .mobile-nav-toggle[aria-expanded='true'] {
        background-image: url(./assets/shared/icon-close.svg);
    }

    .mobile-nav-toggle:focus-visible {
        outline: 5px solid white;
        outline-offset: 5px;
    }
}

@media (min-width: 35em) {
    .primary-navigation {
        /* min, growth factor, max */
        padding-inline: clamp(3rem, 5vw, 7rem);
    }
}

/* sets up the nav padding for tablets 
   use 44.999 to fix issue with different breakpoint styles*/
@media (min-width: 35em) and (max-width: 44.999em) {
    .primary-navigation a > span {
        display: none;
    }
}

@media (min-width: 45em) {

    /* styles for the horizontal line in the header */
    .primary-header::after {
        content: '';
        display: block;
        position: relative;
        height: 1px;
        background: hsl( var(--clr-white));
        /* overlap for the horizontal line */
        margin-right: -2.5rem;
        width: 100%;
        /* flex prop for adding the line in the header */
        order: 1;
    }

    nav {
        /* flex prop for adding the line in the header */
        order: 2;
    }
    
    .primary-navigation {
        margin-block: 2rem;
    }
}

/* select every descendant of this class */
.underline-indicators > * {
    cursor: pointer;
    padding: var(--underline-gap, 1rem) 0;
    border: 0;
    border-bottom: .2rem solid hsl( var( --clr-white) / 0);
}

.underline-indicators > *:hover,
.underline-indicators > *:focus {
    border-color: hsl( var(--clr-white) / .5);
}

/* aria-selected means that its always in this state */
.underline-indicators > .active,
.underline-indicators > [aria-selected="true"] {
    color: hsl( var(--clr-white) / 1);
    border-color: hsl( var(--clr-white) / 1);
}


.tab-list {
    --gap: 2.5rem;
}

.dot-indicators > * {
    cursor: pointer;
    border: 0;
    border-radius: 50%;
    padding: .5em;
    background-color: hsl( var(--clr-white) / .25);
}

.dot-indicators > *:hover,
.dot-indicators > *:focus {
    background-color: hsl( var(--clr-white) / .5);
}

.dot-indicators > [aria-selected="true"] {
    background-color: hsl( var(--clr-white));
}

.lg-dot-indicators > * {
    cursor: pointer;
    display: grid;
    place-items: center;
    margin-top: 1em;
    aspect-ratio: 1;
    width: 40%;
    height: 40%;
    border-radius: 50%;
    font-family: var(--ff-serif);
    font-size: var(--fs-600);
    background-color: hsl( var(--clr-dark));
    color: hsl( var(--clr-white));;
    border: 1px solid hsl( var(--clr-light) / .25);
}

/* --------------------------- */
/* Page-specific background    */
/* --------------------------- */

/* background-position: https://css-tricks.com/almanac/properties/b/background-position/ */
body {
    background-size: cover;
    background-position: bottom center;
}

/* home */

.home {
    background-image: url(./assets/home/background-home-mobile.jpg);
}

@media (min-width: 35em) {
    .home {
        background-position: center center;
        background-image: url(./assets/home/background-home-tablet.jpg);
    }
}

@media (min-width: 45em) {
    .home {
        background-image: url(./assets/home/background-home-desktop.jpg);
    }
}